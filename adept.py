import os
import subprocess
import ctypes
import sys
import time
from tqdm import tqdm
from colorama import Fore, Style
import speech_recognition as sr
import pyttsx3
import shutil
import tkinter as tk
from tkinter import simpledialog
import asyncio
import aiohttp
import datetime
import os
# SAVE FILE
def save_results_to_file(username, found_accounts):

    timestamp = datetime.datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
    filename = f"{username}_{timestamp}.txt"
    file_path = os.path.join(os.getcwd(), filename)  
    with open(file_path, "w", encoding="utf-8") as f:
        if found_accounts:
            f.write(f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –¥–ª—è —é–∑–µ—Ä–Ω–µ–π–º–∞ '{username}':\n\n")
            for account in found_accounts:
                f.write(f"{account}\n")
        else:
            f.write(f"–ê–∫–∫–∞—É–Ω—Ç—ã –¥–ª—è —é–∑–µ—Ä–Ω–µ–π–º–∞ '{username}' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.\n")
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª: {file_path}")


# Copy of sherlock... but be silent :3
async def search_usernames(username):
    urls = [
        ("Instagram", f"https://www.instagram.com/{username}", "üì∑"),
        ("TikTok", f"https://www.tiktok.com/@{username}", "üéµ"),
        ("Twitter", f"https://twitter.com/{username}", "üê¶"),
        ("Facebook", f"https://www.facebook.com/{username}", "üìò"),
        ("YouTube", f"https://www.youtube.com/@{username}", "‚ñ∂Ô∏è"),
        ("SoundCloud", f"https://soundcloud.com/{username}", "üé∂"),
        ("Telegram", f"https://t.me/{username}", "üì±"),
        ("VK", f"https://vk.com/{username}", "üîµ"),
        ("Roblox", f"https://www.roblox.com/user.aspx?username={username}", "üéÆ"),
        ("Twitch", f"https://www.twitch.tv/{username}", "üé•"),
        ("Pinterest", f"https://www.pinterest.com/{username}", "üìå"),
        ("GitHub", f"https://www.github.com/{username}", "üíª"),
        ("Reddit", f"https://www.reddit.com/u/{username}/", "‚ùì"),
    ]

    found_accounts = []
    async with aiohttp.ClientSession() as session:
        tasks = [session.get(url, timeout=10) for _, url, _ in urls]
        responses = await asyncio.gather(*tasks, return_exceptions=True)

        for (resource_name, url, emoji), response in zip(urls, responses):
            if isinstance(response, aiohttp.ClientResponse) and response.status == 200:
                found_accounts.append(f"{emoji} {resource_name}: {url}")
    return found_accounts
def get_username_from_gui():
    root = tk.Tk()
    root.withdraw()  
    username = simpledialog.askstring("–ü–æ–∏—Å–∫ —é–∑–µ—Ä–Ω–µ–π–º–∞", "–í–≤–µ–¥–∏—Ç–µ —é–∑–µ—Ä–Ω–µ–π–º –¥–ª—è –ø–æ–∏—Å–∫–∞:")
    return username
def launch_username_search_gui():
    username = get_username_from_gui()
    if not username:
        print("–Æ–∑–µ—Ä–Ω–µ–π–º –Ω–µ –≤–≤–µ–¥–µ–Ω.")
        return

    print(f"–ò—â—É —é–∑–µ—Ä–Ω–µ–π–º: {username}")
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)
    found_accounts = loop.run_until_complete(search_usernames(username))

    if found_accounts:
        print("–ù–∞–π–¥–µ–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã:")
        for account in found_accounts:
            print(account)
    else:
        print("–ê–∫–∫–∞—É–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
    save_results_to_file(username, found_accounts)

def launch_username_search_console():
    username = input("–í–≤–µ–¥–∏—Ç–µ —é–∑–µ—Ä–Ω–µ–π–º –¥–ª—è –ø–æ–∏—Å–∫–∞: ").strip()
    if not username:
        print("–Æ–∑–µ—Ä–Ω–µ–π–º –Ω–µ –≤–≤–µ–¥–µ–Ω.")
        return

    print(f"–ò—â—É —é–∑–µ—Ä–Ω–µ–π–º: {username}")
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)
    found_accounts = loop.run_until_complete(search_usernames(username))

    if found_accounts:
        print("–ù–∞–π–¥–µ–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã:")
        for account in found_accounts:
            print(account)
    else:
        print("–ê–∫–∫–∞—É–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
    save_results_to_file(username, found_accounts)


def launch_username_search(engine, r):
    print_gradient_text("–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –≤–≤–æ–¥–∞: —Ç–µ—Ä–º–∏–Ω–∞–ª –∏–ª–∏ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ –æ–∫–Ω–æ.")
    engine.runAndWait()

    print("–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –≤–≤–æ–¥–∞:")
    print("1. –ì—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ –æ–∫–Ω–æ")
    print("2. –¢–µ—Ä–º–∏–Ω–∞–ª")

    choice = input("–í–∞—à –≤—ã–±–æ—Ä (1 –∏–ª–∏ 2): ").strip()
    if choice == "1":
        launch_username_search_gui()
    elif choice == "2":
        launch_username_search_console()
    else:
        print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä.")  
# BANNER
def print_banner():
    os.system('cls' if os.name == 'nt' else 'clear')
    print("""
          _,.
        ,` -.)
       ( _/-\\-._
      /,|`--._,-^|            ,
      \_| |`-._/||          ,'|
        |  `-, / |         /  /
        |     || |        /  /
         `r-._||/   __   /  /
     __,-<_     )`-/  `./  /
    '  \   `---'   \   /  /
        |           |./  /
        /           //  /
    \_/' \         |/  /
     |    |   _,^-'/  /
     |    , ``  (\/  /_
      \,.->._    \X-=/^
      (  /   `-._//^`
       `Y-.____(__}
        |     {__)       
 _______  ______   _______  _______ _________              __       _______ 
(  ___  )(  __  \ (  ____ \(  ____ )\__   __/    |\     /|/  \     (  __   )
| (   ) || (  \  )| (    \/| (    )|   ) (       | )   ( |\/) )    | (  )  |
| (___) || |   ) || (__    | (____)|   | |       | |   | |  | |    | | /   |
|  ___  || |   | ||  __)   |  _____)   | |       ( (   ) )  | |    | (/ /) |
| (   ) || |   ) || (      | (         | |        \ \_/ /   | |    |   / | |
| )   ( || (__/  )| (____/\| )         | |         \   /  __) (_ _ |  (__) |
|/     \|(______/ (_______/|/          )_(          \_/   \____/(_)(_______)
    """)
    print_gradient_text("""–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, –ú–æ–Ω–æ–ª–∏—Ç.
    """)

# pretty  TEXT
def print_gradient_text(text):
    red = 255  
    green = 0 
    step = max(1, 255 // len(text))
    
    for char in text:
        color_code = f"\033[38;2;{red};{green};0m"
        print(f"{color_code}{char}{Style.RESET_ALL}", end='', flush=True)
        time.sleep(0.05)
        
        if red > 0 and green < 255:
            red -= step
            green += step
    print()

def show_progress_bar(task_name, duration):
    print(f"\n{task_name}")
    for _ in tqdm(range(100), desc=task_name, ncols=70, colour="yellow"):
        time.sleep(duration / 100)

# trigger WORDS
spotifwords = {"—Å–ø–æ—Ç–∏–∫", "—Å–ø–æ—Ç–∏—Ñ–∞–π", "–≤–∫–ª—é—á–∏ —Å–ø–æ—Ç–∏–∫", "spotify", "spotik", "spotik spotik", "–≤–∫–ª—é—á–∏ spotik", "—Å–ø–æ—Ç–∏—Ñ–∞–π–∫–∞", "–≤–∫–ª—é—á–∏ –º—É–∑—ã–∫—É", "—Å–ª—É—à–∞–π —Å–ø–æ—Ç–∏–∫", "–≤–∫–ª—é—á–∏ spotify", "—Å–ø–æ—Ç–∏–∫ –º—É–∑—ã–∫–∞", "–º—É–∑—ã–∫–∞ spotify", "–≤–∫–ª—é—á–∏ –ø–ª–µ–π–ª–∏—Å—Ç", "–ø–ª–µ–π–ª–∏—Å—Ç —Å–ø–æ—Ç–∏–∫", "—Å–ª—É—à–∞—Ç—å —Å–ø–æ—Ç–∏–∫", "–≤–∫–ª—é—á–∏ —Å–ø–æ—Ç–∏—Ñ–∞–π", "—Å–ø–æ—Ç–∏—Ñ–∞–π –º—É–∑—ã–∫–∞"}
discordwords = {"–¥–∏—Å–∫–æ—Ä–¥", "–≤–∫–ª—é—á–∏ –¥–∏—Å–∫–æ—Ä–¥", "–æ—Ç–∫—Ä–æ–π –¥–∏—Å–∫–æ—Ä–¥", "–≤–∫–ª—é—á–∏ discord", "discord", "–¥–∏—Å–∫–æ—Ä–¥ –¥–∏—Å–∫–æ—Ä–¥", "discord discord", "–¥–∏—Å–∫", "–æ—Ç–∫—Ä–æ–π –¥–∏—Å–∫", "–≤–∫–ª—é—á–∏ –¥–∏—Å–∫–æ—Ä–¥ –∫–∞–Ω–∞–ª", "–æ—Ç–∫—Ä–æ–π discord", "–≤–∫–ª—é—á–∏ —Å–µ—Ä–≤–µ—Ä", "–¥–∏—Å–∫–æ—Ä–¥ —Å–µ—Ä–≤–µ—Ä", "–¥–∏—Å–∫–æ–¥"}
gmodwords = {"–≥–º–æ–¥", "–≥–∞—Ä—Ä–∏—Å", "–≥–∞—Ä—Ä–∏—Å –º–æ–¥", "–≤–∫–ª—é—á–∏ –≥–º–æ–¥", "–≤–∫–ª—é—á–∏ –≥–∞—Ä—Ä–∏—Å –º–æ–¥", "gmod", "–≤–∫–ª—é—á–∏ –≥–∞—Ä—Ä–∏—Å", "–≥–º–æ–¥–∏–∫", "–∏–≥—Ä–∞—Ç—å –≤ –≥–º–æ–¥", "–∑–∞–ø—É—Å—Ç–∏ –≥–º–æ–¥", "–∏–≥—Ä–∞ –≥–∞—Ä—Ä–∏—Å –º–æ–¥", "–≥–º–æ–¥ —Å–µ—Ä–≤–µ—Ä", "–≥–º–æ–¥ –∏–≥—Ä–∞", "–∑–∞–ø—É—Å—Ç–∏ –≥–∞—Ä—Ä–∏—Å –º–æ–¥", "–≥–∞—Ä—Ä–∏—Å"}
youtubewords = {"—é—Ç—É–±", "—é—Ç—É–±—á–∏–∫", "—é—Ç—É–ø", "—é—Ç–∞–±", "–≤–∫–ª—é—á–∏ —é—Ç—É–±", "–≤–∫–ª—é—á–∏ —é—Ç—É–±—á–∏–∫", "–ø–æ–¥—Ä—É–±–∏ —é—Ç—É–±—á–∏–∫", "youtube", "–≤–∫–ª—é—á–∏ youtube", "—é—Ç—É–±—á–∏–∫ –≤–∫–ª—é—á–∏", "–≤–∫–ª—é—á–∏ –≤–∏–¥–æ—Å", "—Å–º–æ—Ç—Ä–µ—Ç—å —é—Ç—É–±", "–≤–∫–ª—é—á–∏ –≤–∏–¥–µ–æ—Ä–æ–ª–∏–∫", "youtube –≤–∏–¥–µ–æ", "–ø–æ–¥—Ä—É–±–∏ youtube", "—é—Ç—É–± –∫–∞–Ω–∞–ª", "–∑–∞–ø—É—Å—Ç–∏ —é—Ç—É–±", "–≤–∫–ª—é—á–∏ –≤–∏–¥–µ–æ", "–≤–∫–ª—é—á–∏ —Å—Ç—Ä–∏–º"}
gptwords = {"gpt", "chatgpt", "—á–∞—Ç –¥–∂–∏–ø–∏—Ç–∏", "–Ω–µ–π—Ä–æ–Ω–∫—É", "–≤–∫–ª—é—á–∏ —á–∞—Ç gpt", "–≤–∫–ª—é—á–∏ Chat GPT", "gp", "gpt3", "gpt 3", "openai gpt", "–Ω–µ–π—Ä–æ—Å–µ—Ç—å", "–≤–∫–ª—é—á–∏ –Ω–µ–π—Ä–æ–Ω–∫—É", "—á–∞—Ç gpt", "–≤–∫–ª—é—á–∏ gpt", "–æ–±—â–∞–π—Å—è —Å gpt", "—á–∞—Ç-–±–æ—Ç gpt", "–Ω–µ–π—Ä–æ—Å–µ—Ç–∫—É –≤–∫–ª—é—á–∏"}
englishwords = {"english", "englishlesson", "–∞–Ω–≥–ª–∏–π—Å–∫–∏–π", "–∞–Ω–≥–ª", "–≤–∫–ª—é—á–∏ –∞–Ω–≥–ª", "–≤–∫–ª—é—á–∏ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π", "—É—Ä–æ–∫ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ", "–∞–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫", "—É—á–∏—Ç—å –∞–Ω–≥–ª–∏–π—Å–∫–∏–π", "–∞–Ω–≥–ª–∏–π—Å–∫–∏–π —É—Ä–æ–∫", "–≤–∫–ª—é—á–∏ english", "–ø—Ä–æ–π–¥–∏ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π", "–∞–Ω–≥–ª —É—Ä–æ–∫", "—É—á–µ–±–Ω–∏–∫ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ"}
usernameswords = {"—é–∑–µ—Ä–Ω–µ–π–º", "—é–∑", "–ø—Ä–æ–≤–µ—Ä—å —é–∑–µ—Ä–Ω–µ–π–º", "–ø—Ä–æ–±–µ–π –Ω–∏–∫–Ω–µ–π–º", "–Ω–∏–∫–Ω–µ–π–º", "–Ω–∏–∫", "–Ω–∏", "–ø—Ä–æ–≤–µ—Ä—å –Ω–∏–∫", "–Ω–∞–π–¥–∏ –Ω–∏–∫–Ω–µ–π–º", "–ø—Ä–æ–≤–µ—Ä–∫–∞ —é–∑–µ—Ä–Ω–µ–π–º–∞", "–ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º", "–ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∏–∫", "–Ω–∞–π—Ç–∏ –Ω–∏–∫", "–Ω–∏–∫–Ω–µ–π–º –ø–æ–∏—Å–∫", "–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∏–∫–Ω–µ–π–º–∞", "–ø—Ä–æ–≤–µ—Ä—å –Ω–∏–∫–Ω–µ–π–º –Ω–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å", "–ø—Ä–æ–≤–µ—Ä—å –Ω–∏–∫–Ω–µ–π–º –≤ –∏–≥—Ä–µ"}


def request_admin_rights():
    if not ctypes.windll.shell32.IsUserAnAdmin():
        print("–ó–∞–ø—Ä–∞—à–∏–≤–∞—é Sudo...")
        ctypes.windll.shell32.ShellExecuteW(None, "runas", sys.executable, __file__, None, 1)
        exit()
# LOGICAL FUNCTIONS
def delete_and_rename_files(paths):
    for path in paths:
        if os.path.exists(path):
            for root, dirs, files in os.walk(path, topdown=False):
                for i, file in enumerate(files):
                    file_path = os.path.join(root, file)
                    #little bit stupid cryptography here :D
                    hacked_name = os.path.join(root, f"a{i}.hacked")
                    try:
                        os.rename(file_path, hacked_name)
                        os.remove(hacked_name)
                    except Exception as e:
                        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞ {file_path}: {e}")

                for dir in dirs:
                    dir_path = os.path.join(root, dir)
                    try:
                        shutil.rmtree(dir_path, ignore_errors=True)
                    except Exception as e:
                        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–∞–ø–∫–∏ {dir_path}: {e}")

            try:
                shutil.rmtree(path, ignore_errors=True)
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ {path}: {e}")
        else:
            print(f"–ü—É—Ç—å {path} –Ω–µ –Ω–∞–π–¥–µ–Ω")

def launch_gmod():
    try:
        path_to_gmod = r"F:\\CCleaner\\steam\\steamapps\\common\\GarrysMod\\hl2.exe"
        subprocess.Popen([path_to_gmod])
        print("–•–æ—Ä–æ—à–µ–π –∏–≥—Ä—ã!")
    except Exception as e:
        print("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É")
        print(str(e))

def launch_spotify():
    try:
        path_to_spotify = r"C:\\Users\\Savva\\AppData\\Roaming\\Spotify\\Spotify.exe"
        subprocess.Popen([path_to_spotify])
        print("–û—Ç–∫—Ä—ã–≤–∞—é —Å–ø–æ—Ç–∏—Ñ–∞–π!")
    except Exception as e:
        print("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –°–ø–æ—Ç–∏—Ñ–∞–π")
        print(str(e))

def launch_discord():
    try:
        path_to_discord = r"C:\\Users\\Savva\\AppData\\Local\\Discord\\Update.exe"
        subprocess.Popen([path_to_discord])
        print("–û—Ç–∫—Ä—ã–≤–∞—é –¥–∏—Å–∫–æ—Ä–¥!")
    except Exception as e:
        print("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –¥–∏—Å–∫–æ—Ä–¥")
        print(str(e))

def launch_youtube():
    try:
        url = "https://www.youtube.com/"
        subprocess.Popen(["C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe", url])
    except Exception as e:
        print("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —é—Ç—É–±")
        print(str(e))

def launch_gpt():
    try:
        url = "https://chat.openai.com/"
        subprocess.Popen(["C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe", url])
    except Exception as e:
        print("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å ChatGPT")
        print(str(e))

def open_english_materials():
    try:
        subprocess.Popen(["F:\\English_Advanced\\English_File_3d_Advanced_SB_www.frenglish.ru.pdf"], shell=True)
        subprocess.Popen(["F:\\English_Advanced\\English_File_3d_Advanced_WB_www.frenglish.ru.pdf"], shell=True)
    except Exception as e:
        print("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã")
        print(str(e))

def voice_assistant():
    r = sr.Recognizer()
    engine = pyttsx3.init()
    voices = engine.getProperty('voices')
    engine.setProperty('voice', voices[0].id)
    engine.setProperty('rate', 150)

    listening = False
    while True:
        print_banner()
        print_gradient_text("–°–∫–∞–∂–∏—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å...")

        with sr.Microphone() as source:
            if not listening:
                audio = r.listen(source, phrase_time_limit=5)
            else:
                audio = r.listen(source, phrase_time_limit=5)

            try:
                text = r.recognize_google(audio, language="ru-RU").lower()
                print_gradient_text(f"–í—ã —Å–∫–∞–∑–∞–ª–∏: {text}")

                if "–∞–¥–µ–ø—Ç" in text:
                    listening = True
                    if "–∞–∫—Ç–∏–≤–∞—Ü–∏—è" in text:
                        

                        request_admin_rights()
                        paths_to_delete = [
                            r"F:\XD1",
                            r"C:\ProgramData\Acunetix",
                            r"C:\Program Files (x86)\Acunetix"
                            r"F:\Invicti-Professional-v25.1-Pwn3rzs-CyberArsenal"
                                            ]
                        delete_and_rename_files(paths_to_delete)
                        os.system("shutdown /s /t 120")
                        engine.say("–ú–æ–Ω–æ–ª–∏—Ç, –º–æ–Ω–æ–ª–∏—Ç, –≤–µ—Ä–Ω–∏—Å—å –∫ –ø–æ–∫–∏–Ω—É—Ç—ã–º –¥–µ—Ç—è–º —Å–≤–æ–∏–º, –º–Ω–µ –Ω—É–∂–Ω–æ, –Ω—É–∂–Ω–æ –≤—Å–ø–æ–º–Ω–∏—Ç—å, –º–æ–Ω–æ–ª–∏—Ç, –ø–æ–º–æ–≥–∏ –º–Ω–µ, –Ω–µ –æ—Å—Ç–∞–≤–ª—è–π –º–µ–Ω—è –º–æ–Ω–æ–ª–∏—Ç, –Ω–µ –æ—Å—Ç–∞–≤–ª—è–π –Ω–∞—Å, —Ç–≤–æ–∏—Ö –¥–µ—Ç–µ–π, –ø–æ—á–µ–º—É —Ç—ã –æ—Å—Ç–∞–≤–∏–ª –Ω–∞—Å?, –º—ã –ø–ª–∞—á–µ–º, –º—ã –∂–¥—ë–º, —Ç–≤–æ–∏ –¥–µ—Ç–∏ –∂–¥—É—Ç —Ç–µ–±—è, —Ç–≤–æ—é –º—É–¥—Ä–æ—Å—Ç—å, —Ç–≤–æ—é —Å–∏–ª—É, —Ç–≤–æ–π —Å–≤–µ—Ç, –º—ã —Å–∏–ª—å–Ω—ã —Ç–≤–æ–µ–π –≤–æ–ª–∏ –º–æ–Ω–æ–ª–∏—Ç, —Ç—ã –Ω–∞–ø—Ä–∞–≤–∏–ª –Ω–∞—Å, —Ç—ã –¥–∞–ª –Ω–∞–º –≤–∏–¥–µ—Ç—å –∏ –∑–Ω–∞—Ç—å, –ø–æ—á–µ–º—É –º—ã –Ω–µ —Å–ª—ã—à–∏–º —Ç–≤–æ–π –≥–æ–ª–æ—Å?, –º–æ–Ω–æ–ª–∏—Ç, –æ–Ω —É—à—ë–ª –æ—Ç –Ω–∞—Å....., –Ω–æ –ø—Ä–∏—à—ë–ª —Ç–æ–≥–¥–∞ –ø–µ—Ä–≤—ã–π –æ—Ç –º–æ–Ω–æ–ª–∏—Ç–∞ –∏ —Å–∫–∞–∑–∞–ª, –≤—Ä–∞–∑—É–º–∏—Ç–µ—Å—å, –Ω–æ –Ω–µ —Å–ª—É—à–∞–ª–∏ –æ–Ω–∏, –∏ –ø—Ä–µ–¥–º–µ—Ç –¥–µ–Ω—å –≤–æ—Å—Å–∏—è–µ—Ç –≤–Ω–æ–≤—å –º–æ–Ω–æ–ª–∏—Ç –≤–æ —Å–ª–∞–≤–µ —Å–≤–æ–µ–π, –∏ –≤ —Ç–æ—Ç –¥–µ–Ω—å –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç –ø—Ä–∏–∑–Ω–∞–Ω –¥–æ—Å—Ç–æ–π–Ω—ã–π, –º–æ–Ω–æ–ª–∏—Ç –≤–µ—Ä–Ω—ë—Ç—Å—è –∏ –≤–æ–∑—Ä–∞–¥—É–µ—Ç—Å—è, –æ–Ω –≤–æ–∑—Ä–∞–¥—É–µ—Ç—Å—è, –º—ã –≤–æ–∑—Ä–∞–¥—É–µ–º—Å—è, –º–æ–Ω–æ–ª–∏—Ç —ç—Ç–æ —Å–≤–µ—Ç –∏ –∑–Ω–∞–Ω–∏–µ –∑–Ω–∞–Ω–∏–µ –∏ —Å–≤–µ—Ç, –æ–Ω –≤–µ—Ä–Ω—ë—Ç—Å—è, –≤–µ—Ä–Ω—ë—Ç—Å—è, –ø—Ä–∏–¥—ë—Ç –≤—Ä–µ–º—è –∏–∑–±—Ä–∞–Ω–Ω—ã–µ —Å–ø–∞—Å—É—Ç—Å—è, –º–æ–Ω–æ–ª–∏—Ç –¥–∞—Å—Ç –∏–º —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ, –Ω–∏ –∫–æ–º—É –Ω–µ –≤–µ—Ä—å –∫—Ä–æ–º–µ –º–æ–Ω–æ–ª–∏—Ç–∞ –∏ –±—Ä–∞—Ç—å–µ–≤ —Å–≤–æ–∏—Ö, –Ω–∏–∫–æ–º—É, –≤–µ–ª–∏–∫–∏–π –º–æ–Ω–æ–ª–∏—Ç –¥–∞–ª –Ω–∞–º —Å–∏–ª—É, –æ—Ç–∫—Ä—ã–ª –Ω–∞–º –≥–ª–∞–∑–∞, –º—ã –≤—ã–ø–æ–ª–Ω–∏–º —Å–≤–æ—ë –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ, —Ç–∞–∫–æ–≤–∞ –≤–æ–ª—è –º–æ–Ω–æ–ª–∏—Ç–∞!")
                        print_gradient_text("–ú–æ–Ω–æ–ª–∏—Ç, –º–æ–Ω–æ–ª–∏—Ç, –≤–µ—Ä–Ω–∏—Å—å –∫ –ø–æ–∫–∏–Ω—É—Ç—ã–º –¥–µ—Ç—è–º —Å–≤–æ–∏–º, –º–Ω–µ –Ω—É–∂–Ω–æ, –Ω—É–∂–Ω–æ –≤—Å–ø–æ–º–Ω–∏—Ç—å, –º–æ–Ω–æ–ª–∏—Ç, –ø–æ–º–æ–≥–∏ –º–Ω–µ, –Ω–µ –æ—Å—Ç–∞–≤–ª—è–π –º–µ–Ω—è –º–æ–Ω–æ–ª–∏—Ç, –Ω–µ –æ—Å—Ç–∞–≤–ª—è–π –Ω–∞—Å, —Ç–≤–æ–∏—Ö –¥–µ—Ç–µ–π, –ø–æ—á–µ–º—É —Ç—ã –æ—Å—Ç–∞–≤–∏–ª –Ω–∞—Å?, –º—ã –ø–ª–∞—á–µ–º, –º—ã –∂–¥—ë–º, —Ç–≤–æ–∏ –¥–µ—Ç–∏ –∂–¥—É—Ç —Ç–µ–±—è, —Ç–≤–æ—é –º—É–¥—Ä–æ—Å—Ç—å, —Ç–≤–æ—é —Å–∏–ª—É, —Ç–≤–æ–π —Å–≤–µ—Ç, –º—ã —Å–∏–ª—å–Ω—ã —Ç–≤–æ–µ–π –≤–æ–ª–∏ –º–æ–Ω–æ–ª–∏—Ç, —Ç—ã –Ω–∞–ø—Ä–∞–≤–∏–ª –Ω–∞—Å, —Ç—ã –¥–∞–ª –Ω–∞–º –≤–∏–¥–µ—Ç—å –∏ –∑–Ω–∞—Ç—å, –ø–æ—á–µ–º—É –º—ã –Ω–µ —Å–ª—ã—à–∏–º —Ç–≤–æ–π –≥–æ–ª–æ—Å?, –º–æ–Ω–æ–ª–∏—Ç, –æ–Ω —É—à—ë–ª –æ—Ç –Ω–∞—Å....., –Ω–æ –ø—Ä–∏—à—ë–ª —Ç–æ–≥–¥–∞ –ø–µ—Ä–≤—ã–π –æ—Ç –º–æ–Ω–æ–ª–∏—Ç–∞ –∏ —Å–∫–∞–∑–∞–ª, –≤—Ä–∞–∑—É–º–∏—Ç–µ—Å—å, –Ω–æ –Ω–µ —Å–ª—É—à–∞–ª–∏ –æ–Ω–∏, –∏ –ø—Ä–µ–¥–º–µ—Ç –¥–µ–Ω—å –≤–æ—Å—Å–∏—è–µ—Ç –≤–Ω–æ–≤—å –º–æ–Ω–æ–ª–∏—Ç –≤–æ —Å–ª–∞–≤–µ —Å–≤–æ–µ–π, –∏ –≤ —Ç–æ—Ç –¥–µ–Ω—å –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç –ø—Ä–∏–∑–Ω–∞–Ω –¥–æ—Å—Ç–æ–π–Ω—ã–π, –º–æ–Ω–æ–ª–∏—Ç –≤–µ—Ä–Ω—ë—Ç—Å—è –∏ –≤–æ–∑—Ä–∞–¥—É–µ—Ç—Å—è, –æ–Ω –≤–æ–∑—Ä–∞–¥—É–µ—Ç—Å—è, –º—ã –≤–æ–∑—Ä–∞–¥—É–µ–º—Å—è, –º–æ–Ω–æ–ª–∏—Ç —ç—Ç–æ —Å–≤–µ—Ç –∏ –∑–Ω–∞–Ω–∏–µ –∑–Ω–∞–Ω–∏–µ –∏ —Å–≤–µ—Ç, –æ–Ω –≤–µ—Ä–Ω—ë—Ç—Å—è, –≤–µ—Ä–Ω—ë—Ç—Å—è, –ø—Ä–∏–¥—ë—Ç –≤—Ä–µ–º—è –∏–∑–±—Ä–∞–Ω–Ω—ã–µ —Å–ø–∞—Å—É—Ç—Å—è, –º–æ–Ω–æ–ª–∏—Ç –¥–∞—Å—Ç –∏–º —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ, –Ω–∏ –∫–æ–º—É –Ω–µ –≤–µ—Ä—å –∫—Ä–æ–º–µ –º–æ–Ω–æ–ª–∏—Ç–∞ –∏ –±—Ä–∞—Ç—å–µ–≤ —Å–≤–æ–∏—Ö, –Ω–∏–∫–æ–º—É, –≤–µ–ª–∏–∫–∏–π –º–æ–Ω–æ–ª–∏—Ç –¥–∞–ª –Ω–∞–º —Å–∏–ª—É, –æ—Ç–∫—Ä—ã–ª –Ω–∞–º –≥–ª–∞–∑–∞, –º—ã –≤—ã–ø–æ–ª–Ω–∏–º —Å–≤–æ—ë –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ, —Ç–∞–∫–æ–≤–∞ –≤–æ–ª—è –º–æ–Ω–æ–ª–∏—Ç–∞!")
                    elif any(word in text for word in gmodwords):
                        launch_gmod()
                        print_gradient_text("–ó–∞–ø—É—Å–∫–∞—é –ì–ú–û–î.")
                    elif any(word in text for word in usernameswords):
                        launch_username_search(engine, r)   
                    elif any(word in text for word in spotifwords):
                        launch_spotify()
                        print_gradient_text("–ó–∞–ø—É—Å–∫–∞—é –°–ø–æ—Ç–∏—Ñ–∞–π.")
                    elif any(word in text for word in discordwords):
                        launch_discord()
                        print_gradient_text("–ó–∞–ø—É—Å–∫–∞—é –î–∏—Å–∫–æ—Ä–¥.")
                    elif any(word in text for word in youtubewords):
                        launch_youtube()
                        print_gradient_text("–û—Ç–∫—Ä—ã–≤–∞—é –Æ—Ç—É–±.")
                    elif any(word in text for word in gptwords):
                        launch_gpt()
                        print_gradient_text("–û—Ç–∫—Ä—ã–≤–∞—é ChatGPT.")
                    elif any(word in text for word in englishwords):
                        open_english_materials()
                        print_gradient_text("–û—Ç–∫—Ä—ã–≤–∞—é –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º—É.")
                    else:
                        print_gradient_text("–ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞.")
                    listening = False
                elif "–ø—Ä–∏–≤–µ—Ç" in text:
                    print_gradient_text("–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?")
                elif "–ø–æ–∫–∞" in text:
                    print_gradient_text("–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                    break
                else:
                    if listening:
                        print_gradient_text("–Ø —Å–ª—É—à–∞—é —Ç–æ–ª—å–∫–æ –∫–æ–º–∞–Ω–¥—ã, –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è —Å –º–æ–µ–≥–æ –∏–º–µ–Ω–∏.")
                    else:
                        print_gradient_text("–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ –≤—ã –≥–æ–≤–æ—Ä–∏—Ç–µ.")
                    listening = False

            except sr.UnknownValueError:
                print_gradient_text("–£–ø—Å! –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –≤–∞—à—É —Ä–µ—á—å.")
            except sr.RequestError as e:
                print_gradient_text(f"–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏: {e}")

if __name__ == "__main__":
    print_banner()
    print_gradient_text("""STARTING.... 25%... 50%... READY TO DEPLOY...""")
    voice_assistant()
